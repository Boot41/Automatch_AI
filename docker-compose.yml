version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: automatch-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/automatch?schema=public
      - JWT_SECRET=automatch_secret
      - SERP_API_KEY=4f68aa9b6e7491102b020c0f28f8b283af8fa5e7a83d67844c267751c78fc638
      - GEMINI_API_KEY=AIzaSyAj5Gh1iLFG0HvdZqaNGTVJkbkeLX5S5nE
    depends_on:
      - db

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: automatch-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    depends_on:
      - backend

  # Database service
  db:
    image: postgres:15-alpine
    container_name: automatch-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=automatch
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
